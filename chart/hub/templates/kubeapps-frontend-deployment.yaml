apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kubeapps.fullname" . }}
  labels:
    app: {{ template "kubeapps.fullname" . }}
    chart: {{ template "kubeapps.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "kubeapps.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/kubeapps-frontend-config.yaml") . | sha256sum }}
      labels:
        app: {{ template "kubeapps.fullname" . }}
        release: {{ .Release.Name }}
        {{ .Values.frontend.affinityLabel.key }}: {{ .Values.frontend.affinityLabel.value }}
    spec:
{{- include "kubeapps.imagePullSecrets" . | indent 6 }}
      containers:
      - name: nginx
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 15s"]
        image: {{ template "kubeapps.image" (list .Values.frontend.image .Values.global) }}
        livenessProbe:
{{ toYaml .Values.frontend.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.frontend.readinessProbe | indent 10 }}
        volumeMounts:
        - name: vhost
          mountPath: /etc/nginx/conf.d
        ports:
        - name: http
          containerPort: 8080
        resources:
{{ toYaml .Values.frontend.resources | indent 12 }}
    {{- if .Values.authProxy.enabled }}
      - name: auth-proxy
        args:
        - /keycloak-proxy
        - --config=/etc/auth-proxy/cfg.conf
        - --client-id={{ required "You must fill \".Values.authProxy.clientID\" with the Client ID of the OIDC provider" .Values.authProxy.clientID }}
        - --client-secret={{ required "You must fill \".Values.authProxy.clientSecret\" with the Client Secret of the OIDC provider" .Values.authProxy.clientSecret }}
        - --discovery-url={{ required "You must fill \".Values.authProxy.discoveryURL\" with the OIDC provider URL" .Values.authProxy.discoveryURL }}
        - --upstream-url=http://localhost:8080/
        - --listen=0.0.0.0:3000
        - --resources=uri=/{namespace}/{accessData}/api/ui-backend/reverse-proxy/v1/*|white-listed=true
        - --resources=uri=/{namespace}/{accessData}/api/ui-backend/helm/v1/*|white-listed=true
        # TODO: delete once pipeline avcheck and avs are migrated to the new endpoint
        - --resources=uri=/{namespace}/{accessData}/api/tiller-deploy/*|white-listed=true
        - --resources=uri=/{namespace}/{accessData}/api/kube/*|white-listed=true
        - --resources=uri=/{namespace}/{accessData}/api/ui-backend/availability|white-listed=true
        - --upstream-timeout=60s
        - --upstream-keepalive-timeout=60s
        - --upstream-tls-handshake-timeout=60s
        - --upstream-response-header-timeout=600s
        - --upstream-expect-continue-timeout=60s
        - --server-read-timeout=30s
        - --server-write-timeout=600s
        {{- range .Values.authProxy.additionalFlags }}
        - {{ . }}
        {{- end }}
        image: {{ template "kubeapps.image" (list .Values.authProxy.image .Values.global) }}
        ports:
        - name: proxy
          containerPort: 3000
        volumeMounts:
        - name: auth-proxy-conf
          mountPath: /etc/auth-proxy
        resources:
{{ toYaml .Values.authProxy.resources | indent 12 }}
    {{- end }}
      volumes:
      - name: vhost
        configMap:
          name: {{ template "kubeapps.frontend-config.fullname" . }}
          items:
          - key: vhost.conf
            path: vhost.conf
      {{- if .Values.authProxy.enabled }}
      - name : auth-proxy-conf
        configMap:
          name: {{ template "kubeapps.frontend-config.fullname" . }}
          items:
          - key: auth-proxy.conf
            path: cfg.conf
      {{- end }}
    {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
    {{- with .Values.frontend.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.frontend.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
