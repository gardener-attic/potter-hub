apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "kubeapps.frontend-config.fullname" . }}
  labels:
    app: {{ template "kubeapps.frontend-config.fullname" . }}
    chart: {{ template "kubeapps.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  vhost.conf: |-
    log_format json_log_format escape=json
      '{'
          '"request_id":"$http_x_request_id",'
          '"time_local":"$time_local",'
          '"remote_addr":"$remote_addr",'
          '"remote_user":"$remote_user",'
          '"request":"$request",'
          '"status": "$status",'
          '"body_bytes_sent":"$body_bytes_sent",'
          '"request_time":"$request_time",'
          '"http_referer":"$http_referer",'
          '"http_user_agent":"$http_user_agent"'
      '}';

    # Retain the default nginx handling of requests without a "Connection" header
    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    # Allow websocket connections
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # Hsts header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload;" always;

    # CSP header to whitelist sources
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; img-src 'self' https://raw.githubusercontent.com; connect-src 'self'; base-uri 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://unpkg.com; font-src 'self' https://fonts.gstatic.com; object-src 'none'";

    # mime sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # click-jacking attacks
    add_header X-Frame-Options DENY;

    # Cross side scripting
    add_header X-XSS-Protection "1; mode=block" always;

    server {
      listen 8080;
      server_name _;
      access_log /var/log/nginx/access.log json_log_format;
      absolute_redirect off;
      server_tokens off;

      location /healthz {
        access_log off;
        default_type text/plain;
        return 200 "healthy";
      }

      location ~* /api/ui-backend($|/) {
        rewrite /api/ui-backend/(apprepositories($|/).*) /$1 break;
        rewrite /api/ui-backend/(controller-version) /$1 break;
        rewrite /([^/]+)/([^/]+)/api/ui-backend/(.*) /$1/$2/$3 break;
        rewrite /([^/]+)/([^/]+)/api/ui-backend /$1/$2 break;

        proxy_pass http://hub-k8s-potter-hub-ui-backend:{{ .Values.uiBackend.service.port }};
        # Disable buffering for log streaming
        proxy_buffering off;
        # Hide Www-Authenticate to prevent it triggering a basic auth prompt in
        # the browser with some clusters
        proxy_hide_header Www-Authenticate;

        # Keep the connection open with the API server even if idle (the default is 60 seconds)
        # Setting it to 1 hour which should be enough for our current use case of deploying/upgrading apps
        # If we enable other use-cases in the future we might need to bump this value
        # More info here https://github.com/kubeapps/kubeapps/issues/766
        proxy_read_timeout 1h;
      }

      location ~* /api/chartsvc($|/) {
        rewrite /api/chartsvc(.*) $1 break;
        proxy_pass http://{{ template "kubeapps.chartsvc.fullname" . }}:{{ .Values.chartsvc.service.port }};
      }
      
      location ~* /([^/]*)/([^/]*)/api/tiller-deploy {
        # Keep the connection open with the API server even if idle (the default is 60 seconds)
        # Setting it to 10 minutes which should be enough for our current use case of deploying/upgrading/deleting apps
        proxy_read_timeout 10m;
        rewrite /([^/]*)/([^/]*)/api/tiller-deploy/(.*) /$1/$2/$3 break;
        rewrite /([^/]*)/([^/]*)/api/tiller-deploy /$1/$2 break;

        # rewrite /api/tiller-deploy/(.*) /$1 break;
        # rewrite /api/tiller-deploy / break;
        proxy_pass http://hub-k8s-potter-hub-ui-backend:{{ .Values.uiBackend.service.port }};
      }

      location / {
        # Add the Authorization header if exists
        add_header Authorization $http_authorization;

        # Here we have to add the header X-Request-ID explicitely again.
        # The doc tells you why: http://nginx.org/en/docs/http/ngx_http_headers_module.html#add_header
        add_header X-Request-ID $request_id always;

        rewrite /static/(.*) /static/$1 break;
        rewrite /([^/]+)/([^/]+)/(.*) /$3 break;
        rewrite /([^/]+)/([^/]+)$ /$1/$2/ permanent;

        proxy_pass http://{{ template "kubeapps.dashboard.fullname" . }}:{{ .Values.dashboard.service.port }};
      }
    }
  {{- if .Values.authProxy.enabled }}
  auth-proxy.conf: |-
    enable-logging: {{ .Values.authProxy.enableLogging }}
    enable-json-logging: true
  {{- end }}
